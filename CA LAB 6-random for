{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CA LAB 6-random for","provenance":[],"authorship_tag":"ABX9TyOcN2PkWJZj1aXQ/s8lj6Yg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"_0vIWc6Zxsme","executionInfo":{"status":"ok","timestamp":1647418571507,"user_tz":-330,"elapsed":720,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n"]},{"cell_type":"code","source":["dataset = pd.read_csv('iphone_purchase_records.csv')"],"metadata":{"id":"K_gn7sXfxvbh","executionInfo":{"status":"ok","timestamp":1647418598944,"user_tz":-330,"elapsed":509,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HEdnGYxkxvfP","executionInfo":{"status":"ok","timestamp":1647418603063,"user_tz":-330,"elapsed":638,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"217240cb-e507-4536-b53e-7574779aa033"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender  Age  Salary  Purchase Iphone\n","0    Male   19   19000                0\n","1    Male   35   20000                0\n","2  Female   26   43000                0\n","3  Female   27   57000                0\n","4    Male   19   76000                0"],"text/html":["\n","  <div id=\"df-39420b8d-b21c-49ed-afd8-8c39cefe5ec5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Salary</th>\n","      <th>Purchase Iphone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Female</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39420b8d-b21c-49ed-afd8-8c39cefe5ec5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-39420b8d-b21c-49ed-afd8-8c39cefe5ec5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-39420b8d-b21c-49ed-afd8-8c39cefe5ec5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["X = dataset.iloc[:,:-1].values\n","y = dataset.iloc[:, 3].values"],"metadata":{"id":"Jo7G59BHxvi2","executionInfo":{"status":"ok","timestamp":1647418893201,"user_tz":-330,"elapsed":568,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","labelEncoder_gender =  LabelEncoder()\n","X[:,0] = labelEncoder_gender.fit_transform(X[:,0])"],"metadata":{"id":"AE1-QBTaxvmh","executionInfo":{"status":"ok","timestamp":1647418896421,"user_tz":-330,"elapsed":702,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["#X = np.vstack(X[:, :]).astype(np.float)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FJjbC7AkxvqT","executionInfo":{"status":"ok","timestamp":1647418622810,"user_tz":-330,"elapsed":522,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"dd282ae8-65ee-4b75-d70d-cc913bdb2bb4"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["# Step 3 - Split Data\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)"],"metadata":{"id":"r83YVhRtxvuF","executionInfo":{"status":"ok","timestamp":1647418852696,"user_tz":-330,"elapsed":499,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","classifier = RandomForestClassifier(n_estimators=100, criterion=\"entropy\", random_state=0)\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tYRXLnj9xvxx","executionInfo":{"status":"ok","timestamp":1647418866493,"user_tz":-330,"elapsed":474,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"4b3f456b-bcc4-43f4-8c98-7f665af35fae"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(criterion='entropy', random_state=0)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["y_pred = classifier.predict(X_test)"],"metadata":{"id":"L3jpIWSoxv1p","executionInfo":{"status":"ok","timestamp":1647418872071,"user_tz":-330,"elapsed":498,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","cm = metrics.confusion_matrix(y_test, y_pred) \n","print(cm)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qvm_eQMWxv5I","executionInfo":{"status":"ok","timestamp":1647418875030,"user_tz":-330,"elapsed":718,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"b0cb42b2-0430-4778-e81c-a8000bcad3e9"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[40  8]\n"," [ 3 29]]\n"]}]},{"cell_type":"code","source":["accuracy = metrics.accuracy_score(y_test, y_pred) \n","print(\"Accuracy score:\",accuracy*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sDYzxQK0xv9D","executionInfo":{"status":"ok","timestamp":1647418919563,"user_tz":-330,"elapsed":512,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"cc7a8ee7-c4a0-4635-d7e2-01708c62989e"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score: 86.25\n"]}]},{"cell_type":"code","source":["precision = metrics.precision_score(y_test, y_pred) \n","print(\"Precision score:\",precision*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J4PFXoAdxwA1","executionInfo":{"status":"ok","timestamp":1647418930313,"user_tz":-330,"elapsed":3,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"48bf676b-af9a-4973-e720-8b42b646657c"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision score: 78.37837837837837\n"]}]},{"cell_type":"code","source":["recall = metrics.recall_score(y_test, y_pred) \n","print(\"Recall score:\",recall)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMJQMp6sy63Z","executionInfo":{"status":"ok","timestamp":1647418748952,"user_tz":-330,"elapsed":3,"user":{"displayName":"SRI KALYAN","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11834340172146188146"}},"outputId":"c42e29f1-92ee-4a32-8793-348aede7fe07"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Recall score: 0.90625\n"]}]}]}